source("R/trials/trial_simulation.R")
link_power <- 1
file <- "Scenario_2_k_1.5_s_0.5.csv"
trial_data <- load_trial_data(file)
trial <- trial_data$trials[[5]] # get one trial
trial$Score <- trial$Score*5
control <- trial[trial$Group=="control",]
treatment <- trial[trial$Group=="treatment",]
##full trial
profile_result <- tweedie.profile(trial$Score ~ trial$Group, link.power = link_power, fit.glm=F , xi.vec
= seq(1.1, 2, by=0.1))
optimal_xi_full <- profile_result$xi.max
var.power_full <- optimal_xi_full
glm_tweedie <- glm(Score ~ Group, data=trial, family = tweedie(var.power = optimal_xi_full, link.power = 1))
mu_tweedie_full <- coef(glm_tweedie)[1]
mu_tweedie_full_treatment <-  sum(coef(glm_tweedie))
phi_tweedie_full <- round(summary(glm_tweedie)$dispersion,2)
# Control group only
profile_result_control <- tweedie.profile(control$Score ~ 1, link.power = link_power, fit.glm = FALSE, xi.vec = seq(1.1, 2, by = 0.1))
optimal_xi_control <- profile_result_control$xi.max
var.power_control <- optimal_xi_control
glm_tweedie_control <- glm(Score ~ 1, data = control, family = tweedie(var.power = var.power_control, link.power = 1))
mu_tweedie_control <- coef(glm_tweedie_control)[1]
phi_tweedie_control <- round(summary(glm_tweedie_control)$dispersion, 2)
# Treatment group only
profile_result_treatment <- tweedie.profile(treatment$Score ~ 1, link.power = link_power, fit.glm = FALSE, xi.vec = seq(1.1, 2, by = 0.1))
optimal_xi_treatment <- profile_result_treatment$xi.max
var.power_treatment <- optimal_xi_treatment
glm_tweedie_treatment <- glm(Score ~ 1, data = treatment, family = tweedie(var.power = var.power_treatment, link.power = 1))
mu_tweedie_treatment <- coef(glm_tweedie_treatment)[1]
phi_tweedie_treatment <- round(summary(glm_tweedie_treatment)$dispersion, 2)
# Print results
cat("Full trial model:\n")
cat("Optimal xi:", optimal_xi_full, "\n")
cat("Mu:", mu_tweedie_full, "\n")
cat("Mu (treatment):", mu_tweedie_full_treatment, "\n")
cat("Phi:", phi_tweedie_full, "\n\n")
cat("Control group model:\n")
cat("Optimal xi:", optimal_xi_control, "\n")
cat("Mu:", mu_tweedie_control, "\n")
cat("Phi:", phi_tweedie_control, "\n\n")
cat("Treatment group model:\n")
cat("Optimal xi:", optimal_xi_treatment, "\n")
cat("Mu:", mu_tweedie_treatment, "\n")
cat("Phi:", phi_tweedie_treatment, "\n")
# Generate x-values for density and ECDF
x_values <- seq(-100, 600, by=0.01)
# Calculate CDF values
cdf_values_full_control <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_full, phi = phi_tweedie_full, power = optimal_xi_full)
cdf_values_full_treatment <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_full_treatment, phi = phi_tweedie_full, power = optimal_xi_full)
cdf_values_control <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_control, phi = phi_tweedie_control, power = optimal_xi_control)
cdf_values_treatment <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_treatment, phi = phi_tweedie_treatment, power = optimal_xi_treatment)
# Calculate ECDF values
ecdf_control <- ecdf(control$Score)
ecdf_treatment <- ecdf(treatment$Score)
# Plot for Control Group
par(mfrow = c(2, 1))  # Set layout to have 2 plots, one above the other
plot(ecdf_control, main = "Control Group ECDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_control, col = "red", lty = 1)
lines(x_values, cdf_values_full_control, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("ECDF Control"),
paste("Fitted Control: mu =", round(mu_tweedie_control, 2), ", phi =", phi_tweedie_control, ", xi =", round(optimal_xi_control, 2)),
paste("Fitted Combined Control: mu =", round(mu_tweedie_full, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
# Plot for Treatment Group
plot(ecdf_treatment, main = "Treatment Group ECDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_treatment, col = "red", lty = 1)
lines(x_values, cdf_values_full_treatment, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("ECDF Treatment"),
paste("Fitted Treatment: mu =", round(mu_tweedie_treatment, 2), ", phi =", phi_tweedie_treatment, ", xi =", round(optimal_xi_treatment, 2)),
paste("Fitted Combined Treatment: mu =", round(mu_tweedie_full_treatment, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
#' Inspect how the power parameter \xi and dispersion parameter \phi differ between
#' the full model and the individual groups
source("R/simulations/method_evaluation/density_methods.R")
source("R/trials/trial_simulation.R")
link_power <- 1
file <- "Scenario_2_k_1.5_s_0.5.csv"
trial_data <- load_trial_data(file)
trial <- trial_data$trials[[5]] # get one trial
trial$Score <- trial$Score*1
control <- trial[trial$Group=="control",]
treatment <- trial[trial$Group=="treatment",]
##full trial
profile_result <- tweedie.profile(trial$Score ~ trial$Group, link.power = link_power, fit.glm=F , xi.vec
= seq(1.1, 2, by=0.1))
optimal_xi_full <- profile_result$xi.max
var.power_full <- optimal_xi_full
glm_tweedie <- glm(Score ~ Group, data=trial, family = tweedie(var.power = optimal_xi_full, link.power = 1))
mu_tweedie_full <- coef(glm_tweedie)[1]
mu_tweedie_full_treatment <-  sum(coef(glm_tweedie))
phi_tweedie_full <- round(summary(glm_tweedie)$dispersion,2)
# Control group only
profile_result_control <- tweedie.profile(control$Score ~ 1, link.power = link_power, fit.glm = FALSE, xi.vec = seq(1.1, 2, by = 0.1))
optimal_xi_control <- profile_result_control$xi.max
var.power_control <- optimal_xi_control
glm_tweedie_control <- glm(Score ~ 1, data = control, family = tweedie(var.power = var.power_control, link.power = 1))
mu_tweedie_control <- coef(glm_tweedie_control)[1]
phi_tweedie_control <- round(summary(glm_tweedie_control)$dispersion, 2)
# Treatment group only
profile_result_treatment <- tweedie.profile(treatment$Score ~ 1, link.power = link_power, fit.glm = FALSE, xi.vec = seq(1.1, 2, by = 0.1))
optimal_xi_treatment <- profile_result_treatment$xi.max
var.power_treatment <- optimal_xi_treatment
glm_tweedie_treatment <- glm(Score ~ 1, data = treatment, family = tweedie(var.power = var.power_treatment, link.power = 1))
mu_tweedie_treatment <- coef(glm_tweedie_treatment)[1]
phi_tweedie_treatment <- round(summary(glm_tweedie_treatment)$dispersion, 2)
# Print results
cat("Full trial model:\n")
cat("Optimal xi:", optimal_xi_full, "\n")
cat("Mu:", mu_tweedie_full, "\n")
cat("Mu (treatment):", mu_tweedie_full_treatment, "\n")
cat("Phi:", phi_tweedie_full, "\n\n")
cat("Control group model:\n")
cat("Optimal xi:", optimal_xi_control, "\n")
cat("Mu:", mu_tweedie_control, "\n")
cat("Phi:", phi_tweedie_control, "\n\n")
cat("Treatment group model:\n")
cat("Optimal xi:", optimal_xi_treatment, "\n")
cat("Mu:", mu_tweedie_treatment, "\n")
cat("Phi:", phi_tweedie_treatment, "\n")
# Generate x-values for density and ECDF
x_values <- seq(-100, 600, by=0.01)
# Calculate CDF values
cdf_values_full_control <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_full, phi = phi_tweedie_full, power = optimal_xi_full)
cdf_values_full_treatment <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_full_treatment, phi = phi_tweedie_full, power = optimal_xi_full)
cdf_values_control <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_control, phi = phi_tweedie_control, power = optimal_xi_control)
cdf_values_treatment <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_treatment, phi = phi_tweedie_treatment, power = optimal_xi_treatment)
# Calculate ECDF values
ecdf_control <- ecdf(control$Score)
ecdf_treatment <- ecdf(treatment$Score)
# Plot for Control Group
par(mfrow = c(2, 1))  # Set layout to have 2 plots, one above the other
plot(ecdf_control, main = "Control Group ECDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_control, col = "red", lty = 1)
lines(x_values, cdf_values_full_control, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("ECDF Control"),
paste("Fitted Control: mu =", round(mu_tweedie_control, 2), ", phi =", phi_tweedie_control, ", xi =", round(optimal_xi_control, 2)),
paste("Fitted Combined Control: mu =", round(mu_tweedie_full, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
# Plot for Treatment Group
plot(ecdf_treatment, main = "Treatment Group ECDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_treatment, col = "red", lty = 1)
lines(x_values, cdf_values_full_treatment, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("ECDF Treatment"),
paste("Fitted Treatment: mu =", round(mu_tweedie_treatment, 2), ", phi =", phi_tweedie_treatment, ", xi =", round(optimal_xi_treatment, 2)),
paste("Fitted Combined Treatment: mu =", round(mu_tweedie_full_treatment, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
library(statmod)
library(tweedie)
x <- 1:100
mutrue <- exp(-1+x/25)
summary(mutrue)
y <- rtweedie(100, mu=mutrue, phi=1, power=1.3)
summary(y)
sum(y==0)
fit <- glm(y ~ x, family=tweedie(var.power=1.3, link.power=0))
summary(fit)
Phi <- 0.85786
Mu <- fitted(fit)
Power <- 1.3
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
Prob.Zero[1:5]
sum(Prob.Zero)
library(statmod)
library(tweedie)
x <- 1:10000
mutrue <- exp(-1+x/25)
summary(mutrue)
y <- rtweedie(length(x), mu=mutrue, phi=1, power=1.3)
summary(y)
sum(y==0)
fit <- glm(y ~ x, family=tweedie(var.power=1.3, link.power=0))
mutrue
length(x)
summary(mutrue)
library(statmod)
library(tweedie)
x <- seq(1,100,by0.1)
library(statmod)
library(tweedie)
x <- seq(1,100,by=0.1)
mutrue <- exp(-1+x/25)
summary(mutrue)
y <- rtweedie(length(x), mu=mutrue, phi=1, power=1.3)
summary(y)
sum(y==0)
fit <- glm(y ~ x, family=tweedie(var.power=1.3, link.power=0))
summary(fit)
Phi <- 0.85786
Mu <- fitted(fit)
Power <- 1.3
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
sum(Prob.Zero)
sum(y==0)
dtweedie(0, mu=mutrue, phi=1, power=1.3)
ptweedie(0, mu=mutrue, phi=1, power=1.3)
library(statmod)
library(tweedie)
x <- seq(1,100,by=0.1)
mutrue <- exp(-1+x/25)
summary(mutrue)
y <- rtweedie(length(x), mu=mutrue, phi=1, power=1.3)
summary(y)
sum(y==0)
fit <- glm(y ~ 1, family=tweedie(var.power=1.3, link.power=0))
summary(fit)
Phi <- 0.85786
Mu <- fitted(fit)
Power <- 1.3
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
sum(Prob.Zero)
Mu
library(statmod)
library(tweedie)
x <- seq(1,100,by=0.1)
mutrue <- exp(-1+x/25)
summary(mutrue)
y <- rtweedie(length(x), mu=mutrue, phi=1, power=1.3)
summary(y)
sum(y==0)
fit <- glm(y ~ 1, family=tweedie(var.power=1.3, link.power=0))
summary(fit)
Phi <- 0.85786
Mu <- fitted(fit)
Power <- 1.3
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
mean(Prob.Zero)
ptweedie(rep(0), mu=Mu[[1]], phi=1, power=1.3)
sum(y==0)
mean(Prob.Zero)*length(x)
ptweedie(rep(0), mu=Mu[[1]], phi=1, power=1.3)
Prob.Zero
summary(fit)
coef(fit)
Mu <- coef(fit)[[1]]
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
Prob.Zero
ptweedie(rep(0), mu=Mu[[1]], phi=1, power=1.3)
summary(y)
library(statmod)
library(tweedie)
x <- seq(1,100,by=0.1)
mutrue <- exp(-1+x/25)
summary(mutrue)
y <- rtweedie(length(x), mu=mutrue, phi=1, power=1.3)
summary(y)
sum(y==0)
fit <- glm(y ~ 1, family=tweedie(var.power=1.3, link.power=0))
Phi <- 0.85786
Mu <- coef(fit)[[1]]
Power <- 1.3
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
ptweedie(rep(0), mu=Mu[[1]], phi=1, power=1.3)
Prob.Zero
ptweedie(rep(0), mu=Mu[[1]], phi=1, power=1.3)
mean(y==0)
ptweedie(rep(0), mu=Mu[[1]], phi=1, power=1.3)
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
Prob.Zero
ptweedie(rep(0), muMu, phi=1, power=1.3)
ptweedie(rep(0), Mu, phi=1, power=1.3)
ptweedie(rep(0), mu=Mu, phi=1, power=1.3)
Power <- 1.3
Phi <- 1
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
Prob.Zero
ptweedie(rep(0), mu=Mu, phi=1, power=Power)
mean(y==0)
ptweedie(rep(0), mu=Mu, phi=1, power=Power)
ptweedie(rep(0), mu=Mu, phi=10, power=Power)
ptweedie(rep(0), mu=1, phi=10, power=Power)
ptweedie(rep(0), mu=1, phi=2, power=Power)
mean(y)
Mu
fit <- glm(y ~ 1, family=tweedie(var.power=1.3, link.power=1))
Phi <- 0.85786
Mu <- coef(fit)[[1]]
Power <- 1.3
Phi <- 1
Prob.Zero <- exp(-Mu^(2-Power) / Phi / (2-Power))
mean(y)
Mu
fit <- glm(y ~ 1, family=tweedie(var.power=1.3, link.power=0))
Mu <- coef(fit)[[1]]
Mu
e^Mu
exp(Mu)
#' Inspect how the power parameter \xi and dispersion parameter \phi differ between
#' the full model and the individual groups
source("R/simulations/method_evaluation/density_methods.R")
source("R/trials/trial_simulation.R")
link_power <- 1
file <- "Scenario_2_k_1.5_s_0.5.csv"
trial_data <- load_trial_data(file)
trial <- trial_data$trials[[5]] # get one trial
trial$Score <- trial$Score*1
control <- trial[trial$Group=="control",]
treatment <- trial[trial$Group=="treatment",]
##full trial
profile_result <- tweedie.profile(trial$Score ~ trial$Group, link.power = link_power, fit.glm=F , xi.vec
= seq(1.1, 2, by=0.1))
optimal_xi_full <- profile_result$xi.max
var.power_full <- optimal_xi_full
glm_tweedie <- glm(Score ~ Group, data=trial, family = tweedie(var.power = optimal_xi_full, link.power = 1))
mu_tweedie_full <- coef(glm_tweedie)[1]
mu_tweedie_full_treatment <-  sum(coef(glm_tweedie))
phi_tweedie_full <- round(summary(glm_tweedie)$dispersion,2)
# Control group only
profile_result_control <- tweedie.profile(control$Score ~ 1, link.power = link_power, fit.glm = FALSE, xi.vec = seq(1.1, 2, by = 0.1))
optimal_xi_control <- profile_result_control$xi.max
var.power_control <- optimal_xi_control
glm_tweedie_control <- glm(Score ~ 1, data = control, family = tweedie(var.power = var.power_control, link.power = 1))
mu_tweedie_control <- coef(glm_tweedie_control)[1]
phi_tweedie_control <- round(summary(glm_tweedie_control)$dispersion, 2)
# Treatment group only
profile_result_treatment <- tweedie.profile(treatment$Score ~ 1, link.power = link_power, fit.glm = FALSE, xi.vec = seq(1.1, 2, by = 0.1))
optimal_xi_treatment <- profile_result_treatment$xi.max
var.power_treatment <- optimal_xi_treatment
glm_tweedie_treatment <- glm(Score ~ 1, data = treatment, family = tweedie(var.power = var.power_treatment, link.power = 1))
mu_tweedie_treatment <- coef(glm_tweedie_treatment)[1]
phi_tweedie_treatment <- round(summary(glm_tweedie_treatment)$dispersion, 2)
# Print results
cat("Full trial model:\n")
cat("Optimal xi:", optimal_xi_full, "\n")
cat("Mu:", mu_tweedie_full, "\n")
cat("Mu (treatment):", mu_tweedie_full_treatment, "\n")
cat("Phi:", phi_tweedie_full, "\n\n")
cat("Control group model:\n")
cat("Optimal xi:", optimal_xi_control, "\n")
cat("Mu:", mu_tweedie_control, "\n")
cat("Phi:", phi_tweedie_control, "\n\n")
cat("Treatment group model:\n")
cat("Optimal xi:", optimal_xi_treatment, "\n")
cat("Mu:", mu_tweedie_treatment, "\n")
cat("Phi:", phi_tweedie_treatment, "\n")
# Generate x-values for density and ECDF
x_values <- seq(-100, 600, by=0.01)
# Calculate CDF values
cdf_values_full_control <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_full, phi = phi_tweedie_full, power = optimal_xi_full)
cdf_values_full_treatment <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_full_treatment, phi = phi_tweedie_full, power = optimal_xi_full)
cdf_values_control <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_control, phi = phi_tweedie_control, power = optimal_xi_control)
cdf_values_treatment <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_treatment, phi = phi_tweedie_treatment, power = optimal_xi_treatment)
# Calculate ECDF values
ecdf_control <- ecdf(control$Score)
ecdf_treatment <- ecdf(treatment$Score)
# Plot for Control Group
par(mfrow = c(2, 1))  # Set layout to have 2 plots, one above the other
plot(ecdf_control, main = "Control Group ECDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_control, col = "red", lty = 1)
lines(x_values, cdf_values_full_control, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("ECDF Control"),
paste("Fitted Control: mu =", round(mu_tweedie_control, 2), ", phi =", phi_tweedie_control, ", xi =", round(optimal_xi_control, 2)),
paste("Fitted Combined Control: mu =", round(mu_tweedie_full, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
# Plot for Treatment Group
plot(ecdf_treatment, main = "Treatment Group ECDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_treatment, col = "red", lty = 1)
lines(x_values, cdf_values_full_treatment, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("ECDF Treatment"),
paste("Fitted Treatment: mu =", round(mu_tweedie_treatment, 2), ", phi =", phi_tweedie_treatment, ", xi =", round(optimal_xi_treatment, 2)),
paste("Fitted Combined Treatment: mu =", round(mu_tweedie_full_treatment, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
#' Inspect how the power parameter \xi and dispersion parameter \phi differ between
#' the full model and the individual groups
source("R/simulations/method_evaluation/density_methods.R")
source("R/trials/trial_simulation.R")
link_power <- 1
file <- "Scenario_2_k_1.5_s_0.5.csv"
trial_data <- load_trial_data(file)
trial <- trial_data$trials[[5]] # get one trial
trial$Score <- trial$Score*1
control <- trial[trial$Group=="control",]
treatment <- trial[trial$Group=="treatment",]
##full trial
profile_result <- tweedie.profile(trial$Score ~ trial$Group, link.power = link_power, fit.glm=F , xi.vec
= seq(1.1, 2, by=0.1))
optimal_xi_full <- profile_result$xi.max
var.power_full <- optimal_xi_full
glm_tweedie <- glm(Score ~ Group, data=trial, family = tweedie(var.power = optimal_xi_full, link.power = 1))
mu_tweedie_full <- coef(glm_tweedie)[1]
mu_tweedie_full_treatment <-  sum(coef(glm_tweedie))
phi_tweedie_full <- round(summary(glm_tweedie)$dispersion,2)
# Control group only
profile_result_control <- tweedie.profile(control$Score ~ 1, link.power = link_power, fit.glm = FALSE, xi.vec = seq(1.1, 2, by = 0.1))
optimal_xi_control <- profile_result_control$xi.max
var.power_control <- optimal_xi_control
glm_tweedie_control <- glm(Score ~ 1, data = control, family = tweedie(var.power = var.power_control, link.power = 1))
mu_tweedie_control <- coef(glm_tweedie_control)[1]
phi_tweedie_control <- round(summary(glm_tweedie_control)$dispersion, 2)
# Treatment group only
profile_result_treatment <- tweedie.profile(treatment$Score ~ 1, link.power = link_power, fit.glm = FALSE, xi.vec = seq(1.1, 2, by = 0.1))
optimal_xi_treatment <- profile_result_treatment$xi.max
var.power_treatment <- optimal_xi_treatment
glm_tweedie_treatment <- glm(Score ~ 1, data = treatment, family = tweedie(var.power = var.power_treatment, link.power = 1))
mu_tweedie_treatment <- coef(glm_tweedie_treatment)[1]
phi_tweedie_treatment <- round(summary(glm_tweedie_treatment)$dispersion, 2)
# Print results
cat("Full trial model:\n")
cat("Optimal xi:", optimal_xi_full, "\n")
cat("Mu:", mu_tweedie_full, "\n")
cat("Mu (treatment):", mu_tweedie_full_treatment, "\n")
cat("Phi:", phi_tweedie_full, "\n\n")
cat("Control group model:\n")
cat("Optimal xi:", optimal_xi_control, "\n")
cat("Mu:", mu_tweedie_control, "\n")
cat("Phi:", phi_tweedie_control, "\n\n")
cat("Treatment group model:\n")
cat("Optimal xi:", optimal_xi_treatment, "\n")
cat("Mu:", mu_tweedie_treatment, "\n")
cat("Phi:", phi_tweedie_treatment, "\n")
# Generate x-values for density and ECDF
x_values <- seq(-100, 600, by=0.01)
# Calculate CDF values
cdf_values_full_control <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_full, phi = phi_tweedie_full, power = optimal_xi_full)
cdf_values_full_treatment <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_full_treatment, phi = phi_tweedie_full, power = optimal_xi_full)
cdf_values_control <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_control, phi = phi_tweedie_control, power = optimal_xi_control)
cdf_values_treatment <- tweedie_distribution(NULL, x = x_values, mu = mu_tweedie_treatment, phi = phi_tweedie_treatment, power = optimal_xi_treatment)
# Calculate ECDF values
ecdf_control <- ecdf(control$Score)
ecdf_treatment <- ecdf(treatment$Score)
# Plot for Control Group
par(mfrow = c(2, 1))  # Set layout to have 2 plots, one above the other
plot(ecdf_control, main = "Control Group emprical CDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_control, col = "red", lty = 1)
lines(x_values, cdf_values_full_control, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("ECDF Control"),
paste("Fitted Control: mu =", round(mu_tweedie_control, 2), ", phi =", phi_tweedie_control, ", xi =", round(optimal_xi_control, 2)),
paste("Fitted Combined Control: mu =", round(mu_tweedie_full, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
# Plot for Treatment Group
plot(ecdf_treatment, main = "Treatment Group empricical CDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_treatment, col = "red", lty = 1)
lines(x_values, cdf_values_full_treatment, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("ECDF Treatment"),
paste("Fitted Treatment: mu =", round(mu_tweedie_treatment, 2), ", phi =", phi_tweedie_treatment, ", xi =", round(optimal_xi_treatment, 2)),
paste("Fitted Combined Treatment: mu =", round(mu_tweedie_full_treatment, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
# Plot for Control Group
par(mfrow = c(2, 1))  # Set layout to have 2 plots, one above the other
plot(ecdf_control, main = "Control Group emprical CDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_control, col = "red", lty = 1)
lines(x_values, cdf_values_full_control, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("empricial "),
paste("Control only: mu =", round(mu_tweedie_control, 2), ", phi =", phi_tweedie_control, ", xi =", round(optimal_xi_control, 2)),
paste("Combined: mu =", round(mu_tweedie_full, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
# Plot for Treatment Group
plot(ecdf_treatment, main = "Treatment Group empricical CDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_treatment, col = "red", lty = 1)
lines(x_values, cdf_values_full_treatment, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("empricial"),
paste("Treatment only: mu =", round(mu_tweedie_treatment, 2), ", phi =", phi_tweedie_treatment, ", xi =", round(optimal_xi_treatment, 2)),
paste("Combined: mu =", round(mu_tweedie_full_treatment, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
# Plot for Control Group
par(mfrow = c(2, 1))  # Set layout to have 2 plots, one above the other
plot(ecdf_control, main = "Control Group emprical CDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_control, col = "red", lty = 1)
lines(x_values, cdf_values_full_control, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("Empricial "),
paste("Control only: mu =", round(mu_tweedie_control, 2), ", phi =", phi_tweedie_control, ", xi =", round(optimal_xi_control, 2)),
paste("Combined: mu =", round(mu_tweedie_full, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
# Plot for Treatment Group
plot(ecdf_treatment, main = "Treatment Group empricical CDF and Fitted CDFs", xlab = "Score", ylab = "CDF", col = "blue", verticals = TRUE, do.points = FALSE)
lines(x_values, cdf_values_treatment, col = "red", lty = 1)
lines(x_values, cdf_values_full_treatment, col = "darkgreen", lty = 2)
legend("bottomright", legend = c(
paste("Empricial"),
paste("Treatment only: mu =", round(mu_tweedie_treatment, 2), ", phi =", phi_tweedie_treatment, ", xi =", round(optimal_xi_treatment, 2)),
paste("Combined: mu =", round(mu_tweedie_full_treatment, 2), ", phi =", phi_tweedie_full, ", xi =", round(optimal_xi_full, 2))
), col = c("blue", "red", "darkgreen"), lty = c(1, 1, 2))
load("inflated_gamma_700")
ls()
load("inflated_gamma_700")
load("inflated_gamma_700.RData")
ls()
trial_indices
trial_mu_estimates
trial_mu_estimates[[1]]
plot(trial_mu_estimates[[1]])
summary(trial_mu_estimates[[1]])
differences <- lapply(trial_mu_estimates[[trial_index]] , function(element) element.1 - element-2)
differences <- lapply(trial_mu_estimates[[trial_index]] , function(element) element[[1]] - element[[2]])
trial_index <- 1
differences <- lapply(trial_mu_estimates[[trial_index]] , function(element) element[[1]] - element[[2]])
differences
plot(differences)
hist(differences)
(differences)
differences <- unlist(lapply(trial_mu_estimates[[trial_index]] , function(element) element[[1]] - element[[2]]))
hist(differences)
real_trial_index <- trial_indices[[trial_index]]
source("R/simulations/models/inflated_gamma_simulations.R")
source("R/simulations/method_evaluation/inflated_gamma_simulations.R")
source("R/simulations/method_evaluation/zero_inflated_gamma_functions.R")
trial <- trials[[real_trial_index]]
ls()
trial <- trial_data$trials[[real_trial_index]]
trial
get_mean_estimate(trial)
